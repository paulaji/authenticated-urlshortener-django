django project name: backend
django app name: application
api: application > api

superuser credentials: username: user | password: resu321321 | email: user@user.com

notable urls: http://127.0.0.1:8000/api/ | http://127.0.0.1:8000/api/token/ | http://127.0.0.1:8000/api/token/refresh/

virtualenv venv // created virtual environment
venv\scripts\activate // activate venv

pip install django // install django
django-admin startproject backend // backend side using django

python manage.py startapp application // created django app inside the project named application

inside the app application, created api folder for the api and included files __init__, urls, views and serializers

python manage.py runserver // starting the app

python -m pip install djangorestframework // install drf (this includes inbuilt password hashing when we update password), using python -m prefix is gonna install the djangorestframework globally outside the venv

python manage.py migrate // migrate since we installed drf

when we start the server, drf interface comes up and when we navigate to the DRF page, we can find authentications and documents on how to setup drf authentication
in the github link of JWT authentication, we can navigate to simplejwt page and read the setup

python -m pip install djangorestframework-simplejwt // for simplejwt

after the installation, settings.py configuration is needed for simplejwt to tell django to use simplejwt authentication method
we can also use the built-in views of simplejwt for access token and refresh token
inorder to do that, we have to alter the urls.py inside our api folder

inorder to check for the working of tokens, we need a user, therefore creating a superuser
python manage.py createsuperuser // to create superuser
username: user
password: resu321321
email: user@user.com

we can actually set how jwt authentication should work in our specific way
for eg: the lifespan of access token, refresh token etc
for that: https://django-rest-framework-simplejwt.readthedocs.io/en/latest/settings.html
add the code to settings.py

going into the refreshtoken url (token/refresh/), if we paste in the refresh token, we can obtain the access token